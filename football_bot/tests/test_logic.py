from football_bot.date_parser import DateParser
from football_bot.date_parser import check_date
from football_bot.team_parser import TeamParser
from football_bot.team_parser import check_team
import unittest


class TestLogic(unittest.TestCase):
    def test_date_check(self):
        self.assertEqual(False, check_date('22.10.199'.split('.')))
        self.assertNotEqual(True, check_date('2022-10-12'.split('.')))
        self.assertEqual(True, check_date('11.11.2022'.split('.')))

    def test_get_leagues(self):
        date_parser = DateParser('2022-11-11')
        self.assertEqual(['–†–æ—Å—Å–∏–π—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞', '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –°–µ—Ä–∏—è –ê',
                          '–ù–µ–º–µ—Ü–∫–∞—è –ë—É–Ω–¥–µ—Å–ª–∏–≥–∞', '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –õ–∏–≥–∞ 1',
                          '–≠—Ä–µ–¥–∏–≤–∏–∑–∏', '–ß–µ–º–ø–∏–æ–Ω—à–∏–ø', '–¢—É—Ä–µ—Ü–∫–∞—è –°—É–ø–µ—Ä–ª–∏–≥–∞'],
                         date_parser.get_leagues()
                         )

        self.assertNotEqual(['–†–æ—Å—Å–∏–π—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞'], date_parser.get_leagues())
        self.assertNotEqual([], date_parser.get_leagues())

    def test_add_emoji(self):
        date_parser = DateParser('2022-11-11')
        self.assertEqual(['‚öΩ üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞', '‚öΩ üáÆüáπ –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –°–µ—Ä–∏—è –ê',
                          '‚öΩ üá©üá™ –ù–µ–º–µ—Ü–∫–∞—è –ë—É–Ω–¥–µ—Å–ª–∏–≥–∞', '‚öΩ üá´üá∑ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –õ–∏–≥–∞ 1', '‚öΩ üá≥üá± –≠—Ä–µ–¥–∏–≤–∏–∑–∏',
                          '‚öΩ  –ß–µ–º–ø–∏–æ–Ω—à–∏–ø', '‚öΩ  –¢—É—Ä–µ—Ü–∫–∞—è –°—É–ø–µ—Ä–ª–∏–≥–∞'],
                         date_parser.leagues
                         )

    def test_matches(self):
        date_parser = DateParser('2022-11-11')
        self.assertEqual("""19:00	*–ü–∞—Ä–∏ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥*	3Ô∏è‚É£ : 2Ô∏è‚É£	*–ê—Ö–º–∞—Ç*	
	–ó–∞–≤–µ—Ä—à–µ–Ω22:45	*–≠–º–ø–æ–ª–∏*	2Ô∏è‚É£ : 0Ô∏è‚É£	*–ö—Ä–µ–º–æ–Ω–µ–∑–µ*	
	–ó–∞–≤–µ—Ä—à–µ–Ω22:30	*–ë–æ—Ä—É—Å—Å–∏—è –ú*	4Ô∏è‚É£ : 2Ô∏è‚É£	*–ë–æ—Ä—É—Å—Å–∏—è –î–æ—Ä—Ç–º—É–Ω–¥*	
	–ó–∞–≤–µ—Ä—à–µ–Ω23:00	*–õ–∏–æ–Ω*	1Ô∏è‚É£ : 1Ô∏è‚É£	*–ù–∏—Ü—Ü–∞*	
	–ó–∞–≤–µ—Ä—à–µ–Ω22:00	*–°–ø–∞—Ä—Ç–∞ –†–æ—Ç—Ç–µ—Ä–¥–∞–º*	1Ô∏è‚É£ : 1Ô∏è‚É£	*–¢–≤–µ–Ω—Ç–µ*	
	–ó–∞–≤–µ—Ä—à–µ–Ω23:00	*–ë–∏—Ä–º–∏–Ω–≥–µ–º –°–∏—Ç–∏*	1Ô∏è‚É£ : 2Ô∏è‚É£	*–°–∞–Ω–¥–µ—Ä–ª–µ–Ω–¥*	
	–ó–∞–≤–µ—Ä—à–µ–Ω20:00	*–ê–ª–∞–Ω—å—è—Å–ø–æ—Ä*	0Ô∏è‚É£ : 0Ô∏è‚É£	*–ê–¥–∞–Ω–∞ –î–µ–º–∏—Å–ø–æ—Ä*	
	–ó–∞–≤–µ—Ä—à–µ–Ω20:00	*–ê–Ω–∫–∞—Ä–∞–≥—é–¥–∂—é*	1Ô∏è‚É£ : 1Ô∏è‚É£	*–¢—Ä–∞–±–∑–æ–Ω—Å–ø–æ—Ä*	
	–ó–∞–≤–µ—Ä—à–µ–Ω""",
                         ''.join([str(i) for i in date_parser.get_matches()])
                         )

        self.assertNotEqual("""–ó–∞–≤–µ—Ä—à–µ–Ω20:00	*–ê–ª–∞–Ω—å—è—Å–ø–æ—Ä*	0Ô∏è‚É£ : 0Ô∏è‚É£	*–ê–¥–∞–Ω–∞ –î–µ–º–∏—Å–ø–æ—Ä*	
	–ó–∞–≤–µ—Ä—à–µ–Ω20:00	*–ê–Ω–∫–∞—Ä–∞–≥—é–¥–∂—é*	1Ô∏è‚É£ : 1Ô∏è‚É£	*–¢—Ä–∞–±–∑–æ–Ω—Å–ø–æ—Ä*	
	–ó–∞–≤–µ—Ä—à–µ–Ω""", ''.join([str(i) for i in date_parser.get_matches()]))
        self.assertNotEqual("", ''.join([str(i) for i in date_parser.get_matches()]))


